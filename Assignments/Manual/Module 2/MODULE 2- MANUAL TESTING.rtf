{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9\par
\par
\b\fs32 1. WHAT IS EXPLORATORY TESTING\par
   - Exploratory testing is an approch to software testing that is \par
      often describe as simultaneous learining, test design and   \par
      execution.\par
\par
2. WHAT IS TRACEABILITY MATRIX\par
   - Traceability matrix is a document that details the technical \par
     requrirements for a given test scenario and its current state.\par
\par
3. WHAT IS BOUNDARY VALUE ANALYSIS TESTING\par
    - Boundary value analysis is based on testing the boundary \par
      values of valid and invalid partitions.\par
\par
4. WHAT IS EQUIVALENCE PARTITIONING TESTING\par
    - Software testing technique that divides the input data of a \par
      software unit into partitions of equivalent data from which \par
     test cases can be derived.\par
\par
5. WHAT IS INTEGRATION TESTING\par
   - Integration testing involves checking individual components \par
     or unit of a software project to expose defects and problems \par
    to verify that they work together as designed.\par
\par
6. WHAT DETERMINES THE LEVEL OF RISK\par
   - Determining the level of risk usually involves trying to assess \par
     not only the likelihood of an identified risk from actually \par
     occurring, but also the potential magnitude the consequence \par
    this risk could have on organisaation and its stakeholder \par
   should it occur.\par
\par
7. WHAT IS ALPHA TESTING\par
    - Alpha testing is performed by tester who are usually internal \par
      employees of the organization.\par
\par
8. WHAT IS BETA TESTING\par
   - Beta testing is performed by clients who are not part of the \par
     organization.\par
\par
9. WHAT IS COMPONET TESTING \par
   - A minimal software item that can be tested in isolation .\par
     a unit is the smallest testable part of software.\par
  - The testing of individual software compomets \par
\par
10. WHAT FUNCTIONAL SYSTEM TESTING\par
    - Functional testing is testing based on an analysis of the \par
      specification of the functinality of componet system.\par
\par
11. WHAT IS NON - FUNCTIONAL TESTING\par
     - Non functional testing is testing the attrivates of componets \par
      or system that do not relate to functionality.\par
\par
12. WHAT IS GUI TESTING\par
    - GARFICAL USER INTERFACE testing is the process of the \par
      system under test. GUI testing involves checking the screens \par
      with the controls like menus, buttons , icons, and all type of \par
      bars , tool bar , menu bar, dialog boxes and window etc.\par
\par
13. WHAT IS ADHOC TESTING\par
     - Adhoc testing is technique where the experinced and good \par
       tester are encourged to think of situations in which the \par
       software may not be able to cope.\par
\par
14. WHAT IS LOAD TESTING\par
     - Load testing is a type of performance testing that simulates a \par
       real world load on any software, application or website \par
       without it your application could fail miserably in real worl \par
       condition.\par
    - load testing examines how the system behaves during normal \par
      and high loads and determines if a system, pieace of software \par
      or computing device can handle high loads given a high \par
      demands of end users.\par
\par
15. WHAT IS A WHITE BOX TESTING AND LIST THE TYPES OF \par
      WHITE BOX TESTING\par
     - White box testing based on an analysis of the internal \par
       sturcture of the componets system.\par
    - statement coverage\par
    - decision coverge\par
    - condision coverge\par
\par
16. WHAT IS BLACK BOX TESTING AND LIST OF THE TYPES OF \par
       BLACK BOX TESTING\par
     - Black box testing is without refernce to the internal strature \par
       of the componet or system.\par
    - equivalance partitioning\par
    - boundary values analysis\par
    - decision table\par
    - state transition testing\par
    - use case\par
\par
17. MENTION WHAT ARE THE CATEGORIES OF DEFECT\par
    - Errors of commissions \par
    - Errors of omissions\par
    - Errors of clarity\par
    - Error of speed and capacity\par
\par
18. MENTION WHAT BIGBANG TESTING IS\par
     - Big bang integration testing strategy where in all units are \par
       linked at once , resulting in a complete system.\par
\par
19. WHAT IS PURPOSE OF EXIT CRITERIA\par
      - Purpose of exit criteria is to define when we stop testing \par
      - end of all testing \par
      - end of phase of testing\par
\par
20. WHEN SHOULD REGRESSION TESTING BE PERFORMED\par
      - Regression testing is necessarry after any feature or \par
        appllication enhancement, bug fix, or configuration change\par
\par
21. WHAT IS 7 KEY PRINCIPLES? EXPLAIN IN DETAILS\par
     - Testing show presense of defects\par
    - exhaustive testing is impossible\par
    - early testing\par
    - defect clustering \par
    - the pesticide paradox\par
   - testing is context dependent\par
   - absense of errors fallacy\par
\par
  - Testing show presence of defect\par
     - testing can show that defect are present but cannot prove \par
       prove that thare are no defects.\par
 \par
 - Exhaustive testing is impossible\par
   - all combinations of inputs and preconditions is not possible.\par
\par
 - Early testing\par
   - testing activities should starts as early as possible in the \par
     development life cycle\par
\par
- Defect clustering\par
  a small number of modules contain most of the defects \par
  are not evently spred in a system.\par
\par
- Pesticide paradox\par
  it the same test are repeated over and over again eventally the  \par
  same set of test cases will no longer find any new defects.\par
\par
- Testing is context dependent\par
 - different kinds of sites are tested differntly\par
\par
- Absence of errors fallacy\par
 - if the system built is unusable and does not fulfill the user need    \par
   and expectation then findinng and fixing defects does not help.\par
\par
22. DIFFERNCE BETWEEN QA/QC/TESTER\par
    - QA\par
     - the implementation of processes, proceduers and standard in \par
       context to verification of developed software and intended  \par
       requirments\par
     - focus on processes and procedures rather than conducting \par
       actual testing on the system\par
    - process oriented activities\par
    - preventive activities\par
   - subset of STLC\par
\par
 - QC\par
   -activities which ensure the verification of developed software \par
    with respect to documented\par
   - focus on actual testing\par
   - produt oriented activites\par
  - corrective process\par
  - subset of QA\par
 \par
- TESTING\par
 - the identification of bug, error, defects in the software\par
 - focuses on actual testing\par
 - produt oriented activities\par
 - preventive process\par
 - subset of QC\par
\par
23. DIFFENNCE BETWEEN SMOKE AND SANITY\par
  - SMOKE TESTING determines whether a new build delivered by    \par
    the development team is bug free or not\par
 - SANITY TESTING is type of software testing that aims to quickly \par
   evaluate whether the basic finctionality of new software buid is\par
  working correctly or not.\par
\par
24. differnce between verfication and validation\par
     - VERIFICATION evaluates software artifacts to ensure they \par
       meet the specified requriements and standards.\par
     - VALIDATION is the process of assessing a new software \par
       produt to ensure that its performance matches users needs.\par
\par
25. EXPLAIN TYPES OF PERFOMANCE TESTING\par
    - LOAD TESTING\par
    - load testing examines how the system behaves during normal \par
      and high loads and determines if a system, pieace of software \par
      or computing device can handle high loads given a high \par
      demands of end users.\par
\par
  - STRESS TESTING \par
    - it even test beyond the normal operating point and evaluates \par
      how the system works under those extreme conditions.\par
    - the goal of stress testing is measure the software stability.\par
\par
  - SPIKE TESTING\par
   - spike testing is a type of stress testing that evaluates software \par
     performance when workloads are substantially increased \par
     quickly and repeatedly.\par
\par
 - ENDURANCE TESTING\par
  - is an evaluation of how software performs with a normal \par
    workload over an extended amount of time.\par
\par
 - SCALABILITY TESTING\par
  - used to determine if software is effectively handling increasing \par
     workload.\par
 \par
 - VOLUME TESTING\par
  - volume testing determines how effciently software performs \par
     with large projected amounts of data.\par
\par
26. WHAT IS THE DIFFERNCE BETWEEN THE STLC AND SDLC\par
    - STLC ( SOFTWARE TESTING LIFE CYCLE) \par
     - is mainly related to softwar testing.\par
     - is focus only on testing the software.\par
     - involves only five phase or steps.\par
     - less number of members are needed\par
     \par
    - SDLC ( SOFTWARE DEVELOPMENT LIFE CYCLE )\par
    - is manily related to software development\par
    - development other phases like testing is also include\par
    - involves total six phases or steps\par
    - more number are required for the whole process.\par
\par
27. explain difference between functional testing and non \par
       functional testing\par
  - FUNCTIONAL TESTING\par
  - it focuses on testing the functionality of the software or  \par
    system\par
 - verifies whether the software meets the functiona\par
   requriments.\par
 - it involves testing the features and functinalities of the \par
   software such as input-output error handling and user \par
   interface\par
- it can be performed manually or using automated testing \par
  tool\par
\par
- NON-FUNCTIONAL TESTING\par
 - it focuses on testing the non-functional aspects of the software \par
   or system\par
 - verifies whether the software meets the non-functional \par
   requirements such as perfomance, security, usability,    \par
   reliability, and compatibility\par
 - requires specialized testing tool and framework to measure\par
   and evalute the non-functional requirements.\par
\par
28. WHAT ARE THE DIFFERNCE METHODOLOGY IN AGILE \par
       DEVELOPMENT MODEL\par
    - Agile model follows the incremental approch, where each \par
     incremental part is developed through iteration after every \par
     timebox.\par
  - agile model the measurment of progress is in terms of \par
    developed and delivered functionalities\par
\par
29. WHAT IS THE DIFFERENCE BETWEEN TEST SCENARIOS, TEST \par
       CASE AND TEST SCRIPTS\par
     - TEST SCENARIOS \par
       - a scenario is any functionality that can be tested.\par
     - TEST CASE\par
       - test cases involes the set of steps, condition and input \par
          which can be used while performing the testing tasks.\par
     - TEST SCRIPTS\par
       - a set of sequential instruction that detail to how to execute \par
         a core business function.\par
\par
30. EXPLAIN WHAT TEST PLAN IS? WHAT IS THE INFORMATION \par
      THAT SHOULD BE COVERD\par
   - Test plan is a detailed document that catalogs the test \par
     strategies, objectives, schedule, estinations, deadlines, and \par
     resource requried to complete that project.\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
   \par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\b0\fs22\par
}
 